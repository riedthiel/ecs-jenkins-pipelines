Parameters:
  RepositoryTag:
    Type: String
    Default: "002"

  DesiredCount:
    Type: Number
    Default: 0

  TargetGroup:
    Type: String

  Cluster:
    Type: String

  Repository:
    Type: String
    Default: "mynginx"


Resources:
  ECSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub svc-${AWS::StackName}
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "ecs.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      Role: !Ref ECSServiceRole
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: !Ref Repository
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AWS::StackName}-${Repository}
      ContainerDefinitions:
        - Name: !Ref Repository
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}:${RepositoryTag}
          Essential: true
          Memory: 128
          MountPoints:
            - SourceVolume: my-vol
              ContainerPath: /var/www/my-vol
          PortMappings:
            - ContainerPort: 80
          Environment:
            - Name: Tag
              Value: !Ref RepositoryTag
      Volumes:
        - Name: my-vol


Outputs:
  Repository:
    Value: !Ref Repository

  StackName:
    Value: !Ref AWS::StackName
