Description: >

    This template deploys a VPC, with a pair of public and private subnets spread
    across two Availabilty Zones. It deploys an Internet Gateway, with a default
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
    and default routes for them in the private subnets.

    It then deploys a highly available ECS cluster using an AutoScaling Group, with
    ECS hosts distributed across multiple Availability Zones.

    Finally, it deploys a pair of example ECS services from containers published in
    Amazon EC2 Container Registry (Amazon ECR).

    Last Modified: 3rd March 2017

Parameters:

    VPC:
        Type: AWS::EC2::VPC::Id
        Default: "vpc-e50e8a83"
        Description: Choose which VPC the Applicaion Load Balancer should be deployed to

    Subnets:
        Description: Choose which subnets the Applicaion Load Balancer should be deployed to
        Type: String
        Default: "subnet-a1126b8c,subnet-e2daf5ab,subnet-ef6b1cb4,subnet-5a880d66"

    KeyName:
        Description: Key pair name for ssh access
        Type: String
        Default: "ecs_l3_pci"

    TemplateBucket:
        Description: Bucket location of CF Templates
        Type: String
        Default: "acom-sde-cfn"

    Repository:
        Description: Repository to assisgn to services
        Type: String
        Default: "mynginx"

    RepositoryTag:
        Description: Bucket location of CF Templates
        Type: String
        Default: "001"

Resources:

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ["", [ "https://s3.amazonaws.com/", !Ref TemplateBucket, "/infrastructure/security-groups.yaml" ] ]
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !Ref VPC

    external:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ["", [ "https://s3.amazonaws.com/", !Ref TemplateBucket, "/infrastructure/ecs-master.yaml" ] ]
            Parameters:
                EnvironmentName: !Join ["-", [ !Ref "AWS::StackName", external ]]
                VPC: !Ref VPC
                Subnets: !Ref Subnets
                KeyName: !Ref KeyName
                LoadBalancerSecurityGroup: !GetAtt SecurityGroups.Outputs.ExternalLoadBalancerSecurityGroup
                ECSHostSecurityGroup: !GetAtt SecurityGroups.Outputs.ExternalECSHostSecurityGroup
                TemplateBucket: !Ref TemplateBucket
                Repository: !Ref Repository
                RepositoryTag: !Ref RepositoryTag

    internal:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Join ["", [ "https://s3.amazonaws.com/", !Ref TemplateBucket, "/infrastructure/ecs-master.yaml" ] ]
            Parameters:
                EnvironmentName: !Join ["-", [ !Ref "AWS::StackName", internal ]]
                VPC: !Ref VPC
                Subnets: !Ref Subnets
                KeyName: !Ref KeyName
                LoadBalancerSecurityGroup: !GetAtt SecurityGroups.Outputs.InternalLoadBalancerSecurityGroup
                ECSHostSecurityGroup: !GetAtt SecurityGroups.Outputs.InternalECSHostSecurityGroup
                TemplateBucket: !Ref TemplateBucket
                Repository: !Ref Repository
                RepositoryTag: !Ref RepositoryTag
